#!/bin/sh

# Show status of Slurm job(s).
# Both queue information and accounting information is printed.

if test $# -ne 1
then
	echo "Usage: showjob <jobid>"
	exit 1
fi

jobid=$1

###########################################################################
# Get queue information

TMPFILE=/tmp/showjob.$$

# Check if job is in the queue
jobfound=`squeue -ho "%i" -j $jobid 2>/dev/null`
if test $? -eq 0
then
	# Job found in the queue
	echo "Queued job information:"
	scontrol show job $jobid | tee $TMPFILE
else
	echo "The job $jobid is not in the current Slurm queue."
fi

# Parse the job status information (read E-mail)
export jobscript=`grep Command= $TMPFILE | sed s/Command=//`
grep "mail-user" $jobscript
rm -f $TMPFILE

###########################################################################
# Execute sacct and print nicely formatted output

function format_sacct()
{
	# echo Called format_sacct with $@
	# Add -P flag for parseable output with fields separated by "|"
	sacct -P $@ | awk -F "|" '
{
	for (i=1; i<= NF; i++) {
		column[i][NR] = $i
		len = length($i)
		if (len > colwidth[i]) colwidth[i] = len	# Column width
	}
	cols=NF
	lines=NR
} END {
	# Print a header
	for (i=1; i<= cols; i++) {
		printf("%*s ", colwidth[i], column[i][1])
	}
	printf("\n")
	for (i=1; i<= cols; i++) {
		printf("%.*s ", colwidth[i], "-----------------------------------------------------")
	}
	printf("\n")
	# Print lines
	for (l=2; l<=lines; l++) {
		for (i=1; i<= cols; i++) {
			printf("%*s ", colwidth[i], column[i][l])
		}
		printf("\n")
	}
}'

}

###########################################################################
# Get job accounting information

echo
echo "Accounting information from the Slurm database:"
echo
echo "Job parameters for jobid $jobid:"
export jobvars="jobid,jobname,user,account,partition,Timelimit"
format_sacct -j $jobid -o $jobvars

echo
echo "Job details information for jobid $jobid:"
export jobvars="jobid,Start,elapsed,End,CPUTime,NNodes,NCPUS,ExitCode,nodelist"
format_sacct -j $jobid -o $jobvars
